/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.66
 * Generated at: 2021-07-15 02:05:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.test_005fapi;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;

public final class customerInsertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/test_api/../common/menubar.jsp", Long.valueOf(1626311290876L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>first</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/first/resources/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("	span.guide {display:none; font-size:12px; top:12px, right:10px;}\r\n");
      out.write("	span.ok{color:green;}\r\n");
      out.write("	span.error{color:red;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');

	//로그인 확인을 위해서 내장된 session 객체를 이용
	Member loginMember = (Member)session.getAttribute("loginMember");

      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("ul#menubar {\r\n");
      out.write("	list-style: none;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	left: 150px;\r\n");
      out.write("	/* top: -30px; */\r\n");
      out.write("}\r\n");
      out.write("ul#menubar li {\r\n");
      out.write("	float: left;\r\n");
      out.write("	width: 120px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	margin-right: 5px;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("ul#menubar li a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	width: 120px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	display: block;\r\n");
      out.write("	background: orange;\r\n");
      out.write("	color: navy;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	text-shadow: 1px 1px 2px white;\r\n");
      out.write("	padding-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("ul#menubar li a:hover {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	width: 120px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	display: block;\r\n");
      out.write("	background: navy;\r\n");
      out.write("	color: white;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	text-shadow: 1px 1px 2px navy;\r\n");
      out.write("	padding-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("hr { clear: both; }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
 if(loginMember == null){ //로그인하지 않았을 때 
      out.write("\r\n");
      out.write("<ul id=\"menubar\">\r\n");
      out.write("	<li><a href=\"/first/nlist\">공지사항</a></li>\r\n");
      out.write("	<li><a href=\"/first/blist?page=1\">게시글</a></li>\r\n");
      out.write("	<li><a href=\"#\">QnA</a></li>\r\n");
      out.write("	<li><a href=\"/first/views/test_api/testList.html\">테스트</a></li>\r\n");
      out.write("	<li><a href=\"/first/index.jsp\">홈</a></li>\r\n");
      out.write("</ul>\r\n");
 }else if(loginMember.getAdmin().equals("Y")){ //관리자가 로그인했을 때 
      out.write("\r\n");
      out.write("<ul id=\"menubar\">\r\n");
      out.write("	<li><a href=\"/first/mlist\">회원관리</a></li>\r\n");
      out.write("	<li><a href=\"/first/nlist.ad\">공지사항관리</a></li>\r\n");
      out.write("	<li><a href=\"/first/blist?page=1\">게시글관리</a></li>\r\n");
      out.write("	<li><a href=\"#\">사진게시판관리</a></li>\r\n");
      out.write("	<li><a href=\"/first/index.jsp\">홈</a></li>\r\n");
      out.write("</ul>\r\n");
 }else { //일반 회원이 로그인했을 때 
      out.write("\r\n");
      out.write("<ul id=\"menubar\">\r\n");
      out.write("	<li><a href=\"/first/nlist\">공지사항</a></li>\r\n");
      out.write("	<li><a href=\"/first/blist?page=1\">게시글</a></li>\r\n");
      out.write("	<li><a href=\"#\">QnA</a></li>\r\n");
      out.write("	<li><a href=\"#\">암호화회원가입</a></li>\r\n");
      out.write("	<li><a href=\"/first/index.jsp\">홈</a></li>\r\n");
      out.write("</ul>\r\n");
 } 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" 	\r\n");
      out.write("	<hr style=\"clear:both\">\r\n");
      out.write("	<h1 align=\"center\">주문서</h1>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"outer\" align=\"center\">\r\n");
      out.write("		<form action=\"/first/cinsert.do\" method=\"post\" id=\"joinForm\">\r\n");
      out.write("			<table width=\"500\" cellspacing=\"5\">				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>* 이름</td>\r\n");
      out.write("					<td><input type=\"text\" name=\"name\" required></td>\r\n");
      out.write("				</tr>				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>이메일</td>\r\n");
      out.write("					<td><input type=\"email\" name=\"email\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>전화번호</td>\r\n");
      out.write("					<td><input type=\"tel\" name=\"phone\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>우편번호</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"post\" class=\"postcodify_postcode5\" size=\"6\">\r\n");
      out.write("						<button type=\"button\" id=\"postcodify_search_button\">검색</button>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>도로명 주소</td>\r\n");
      out.write("					<td><input type=\"text\" name=\"address1\" class=\"postcodify_address\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>상세 주소</td>\r\n");
      out.write("					<td><input type=\"text\" name=\"address2\" class=\"postcodify_extra_info\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<!-- jQuery와 Postcodify를 로딩한다. -->\r\n");
      out.write("				<script src=\"//d1p7wdleee1q2z.cloudfront.net/post/search.min.js\"></script>\r\n");
      out.write("				<script>\r\n");
      out.write("					/*  검색 단추를 누르면 팝업 레이어가 열리도록 설정한다. */\r\n");
      out.write("					$(function(){\r\n");
      out.write("						$(\"#postcodify_search_button\").postcodifyPopUp();\r\n");
      out.write("					});\r\n");
      out.write("				</script>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\" align=\"center\">\r\n");
      out.write("						<input type=\"submit\" value=\"주문하기\">\r\n");
      out.write("						&nbsp;\r\n");
      out.write("						<input type=\"reset\" value=\"취소하기\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("		<br>\r\n");
      out.write("		<br>\r\n");
      out.write("		<a href=\"/first/index.jsp\">시작 페이지로 이동</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		function validate(){\r\n");
      out.write("			// 아이디 중복체크 여부\r\n");
      out.write("			if($(\"#idDuplicateCheck\").val() == 0){\r\n");
      out.write("				alert(\"사용가능한 아이디를 입력해주세요.\");\r\n");
      out.write("				$(\"#userId\").focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}else{\r\n");
      out.write("				return true;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		$(function(){\r\n");
      out.write("			$(\"#userId\").on(\"keyup\",function(){\r\n");
      out.write("				var userId = $(this).val();\r\n");
      out.write("				\r\n");
      out.write("				if(userId.length < 5){\r\n");
      out.write("					$(\".guide\").hide();\r\n");
      out.write("					$(\"#idDuplicateCheck\").val(0);\r\n");
      out.write("					\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url:\"idCheck.do\",\r\n");
      out.write("					data:{id:userId},\r\n");
      out.write("					type:\"post\",\r\n");
      out.write("					success:function(data){\r\n");
      out.write("						console.log(data);\r\n");
      out.write("						\r\n");
      out.write("						if(data == \"ok\"){\r\n");
      out.write("							$(\".error\").hide();\r\n");
      out.write("							$(\".ok\").show();\r\n");
      out.write("							$(\"#idDuplicateCheck\").val(1);\r\n");
      out.write("						}else{\r\n");
      out.write("							$(\".ok\").hide();\r\n");
      out.write("							$(\".error\").show();\r\n");
      out.write("							$(\"#idDuplicateCheck\").val(0);\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("					},error:function(jqxhr,textStatus,errorThrown){\r\n");
      out.write("						console.log(\"ajax 처리 실패\");\r\n");
      out.write("						\r\n");
      out.write("						console.log(jqxhr);\r\n");
      out.write("						console.log(textStatus);\r\n");
      out.write("						console.log(errorThrown);\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
